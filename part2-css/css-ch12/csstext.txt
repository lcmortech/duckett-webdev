INTRO TO TEXT (CH12):
The properties that allow you to control the appearance of text can be split into two groups:
- Those that directly affect the font and its appearance (including the typeface, whether it is regular, bold or italic, and the size of the text)
- Those that would have the same effect on text no matter what font you were using (including the color of text and the spacing between words and letters)
The formatting of your text can have a significant effect on how readable your pages are. As we look through these properties I will also give you some design tips on how to display your type.

Typeface Terminology:
Serif - Serif fonts have extra details on the ends of the main strokes of the letters. These details are known as serifs.
Sans-Serif - Sans-serif fonts have straight ends to letters, and therefore have a much cleaner design.
Monospace - Every letter in a monospace (or fixed-width) font is the same width. (Non-monospace fonts have different widths.)
- In print, serif fonts were traditionally used for long passages of text because they were considered easier to read.
- Screens have a lower resolution than print. So, if the text is small, sans-serif fonts can be clearer to read.
- Monospace fonts are commonly used for code because they align nicely, making the text easier to follow.

Fonts: Weight, Style, Stretch
Weight:
Light
Medium
Bold
Black
 - The font weight not only adds emphasis but can also affect the amount of white space and contrast on a page.

Style:
Normal
Italic
Oblique
 - Italic fonts have a cursive aspect to some of the lettering. 
 - Oblique font styles take the normal style and put it on an angle.

Stretch:
Condensed
Regular
Extended
 - In condensed (or narrow) versions of the font, letters are thinner and closer together. 
 - In expanded versions they are thicker and further apart.

 Choosing a Typeface for your Website:
 - When choosing a typeface, it is important to understand that a browser will usually only display it if it's installed on that user's computer.

 Serif - Serif fonts have extra details on the end of the main strokes of the letters.
 Ex: Georgia, Times, Times New Roman

 Sans-Serif - Sans-serif fonts have straight ends to letters and therefore have a much cleaner design.
 Ex: Arial, Verdana, Helvetica

 * As a result, sites often use a small set of typefaces that are installed on most computers (shown above). There are some techniques to get around this limitation (which are covered on pages 271-272).
* It is possible to specify more than one typeface and create an order of preference (in case the user does not have your first choice of typeface installed). This is sometimes referred to as a font stack.

Additional Typefaces: Monospace, Cursive, Fantasy
Monospace - Every letter in a monospace typeface is the same width. (Non-monospace fonts have different widths.)
Ex: Courier, Courier New
Cursive - Cursive fonts either have joining strokes or other cursive characteristics, such as handwriting styles.
Ex: Comic Sans MS, Monotype Corsiva
Fantasy - Fantasy fonts are usually decorative fonts and are often used for titles. They're not designed for long bodies of text.
Ex: Impact, Haettenschweiler

Techniques that offer a wider choice of Typefaces: There are several ways to use fonts other than those listed on the previous page. However, typefaces are subject to copyright, so the techniques you can choose from are limited by their respective licenses.
Ex: Font-Family, Font-Face, Service-Based Font-Face

* All are suitable for any length of text

Font-Family:
- The user's computer needs the typeface installed. CSS is used to specify the interface.
Covered on - Pages 273-374
Issues - There is a limited choice of typefaces that most users have installed.
Licensing - You are not distributing the typeface, so there is no licensing issue.
Choice of Typefaces - There is a limited choice because the font needs to be installed on users' computers.

Font-Face:
- CSS specifies where a font can be downloaded from if it is not installed on the computer.
Covered on - Pages 277-278
Issues - The user has to download the font file, which can slow down loading of the web page.
Choice of Typefaces - Choice is limited because few typefaces can be freely distributed this way.

Service-Based Font-Face:
- Commercial services give users access to a wider range of fonts using @font-face.
Covered on - Pages 277-278
Issues - There is an ongoing fee to cover licenses paid to font foundries.
Licensing - The service takes care of the licensing issues with the people who made the font.
Choices of Typefaces - Each service offers a different choice of fonts based on their agreements with font foundries.

* If you design on a Mac, it is important to check what the typefaces look like on a PC because PCs can render type less smoothly. But if you design on a PC, then it should look fine on a Mac.

Additional Techniques:
* Not suitable for long passages of text
Images:
- You can create a graphic that contains the text as you want it to appear in a different typeface.
Covered on - Pages 99-100 and 109-113
Issues - Excludes people who use screen readers
will rely on the alt text to know what is said.
Licensing - You can use any typeface that you have a license to use on your computer (because you are not distributing the typeface).
Choice of Typefaces - Very wide choice because you can use any typeface that you have a license for.

SIFR(defunct):
- The font is embedded into a Flash movie, and JavaScript replaces specified HTML text with a flash version of it.The font is embedded into a Flash movie, and JavaScript replaces specified HTML text with a flash version of it.
Covered on - See website for more details 
Issues - This method only works if the user has Flash and JavaScript enabled on their device.
Choice of Typefaces - This method provides a lot of choice because many of the major typeface manufacturers permit this kind of usage.

CUFON:
Cufon offers similar functionality to sIFR. It uses JavaScript to create either an SVG or VML version of the text.
Covered on - See website for more details
Issues - Requires JavaScript to be enabled. Also, users cannot select text, and text can't change when a user hovers over it.
Licensing - As with SIFR, some typeface makers allow use of their fonts with CUFON, but you need to check the license.
Choice of Typefaces - Slightly less choice than for SIFR, as some typeface manufacturers are not as keen on this technique.

Specifying Typefaces - font-family:
- The font-family property allows you to specify the typeface that should be used for any text inside the element(s) to which a CSS rule applies.
- The value of this property is the name of the typeface you want to use.
- The people who are visiting your site need the typeface you have specified installed on their computer in order for it to be displayed.
- You can specify a list of fonts separated by commas so that,
if the user does not have your first choice of typeface installed, the browser can try to use an alternative font from the list.
- It is also common to end with a generic font name for that type of font (which you saw on pages 269-270).
- If a font name is made up of more than one word, it should be put in double quotes.
- Designers suggest pages usually look better if they use no more than three typefaces on a page.
We will be using an extended version of the HTML shown on this page for all of the examples

Size of Type - font-size:
- The font-size property enables you to specify a size for the
font. There are several ways to specify the size of a font. The most common are:

Pixels:
Pixels are commonly used because they allow web designers very precise control over how much space their text takes up. The number of pixels is followed by the letters px.
Percentages:
The default size of text in browsers is 16px. So a size of 75% would be the equivalent of 12px, and 200% would be 32px.
If you create a rule to make all text inside the <body> element to be 75% of the default size (to make it 12px), and then specify another rule that indicates the content of an element inside the <body> element should be 75% size, it will be 9px (75% of the 12px font size).
Ems:
An em is equivalent to the width of a letter m.
We will look at these measurements in greater detail on the next page.

Type Scales:
You may have noticed that programs such as Word, Photoshop and InDesign offer the same sizes of text.

- This is because they are set according to a scale or ratio that was developed by European typographers in the sixteenth century.
- It is considered that this scale for type is pleasing to the eye and it has therefore changed little in the last 400 years.
- For this reason, when you are designing pages, using sizes from this scale will help them look more attractive.
On the next page, you can see how to achieve this scale using pixels, percentages, and ems.
- Print designers often refer to the size of text in terms of points rather than pixels (hence the use of pt in the scale on the right). A pixel roughly equates to a point because a point corresponds to 1/72 of an inch, and most computer displays have a resolution of 72 dots per inch.
- The default size of text in a browser is 16 pixels. So if you use percentages or ems, you calculate the size of text you want based on the default size of the text used in browsers.
- For example, you could scale down to 12 pixels for body copy and scale up to 24 pixels for headings.
Recently, some web designers have started to leave the body text at the default size of 16 pixels and adjust the other font sizes using a scale that keeps the relative proportions of this one.
- When you first see body text at 16 pixels, it might seem quite large. Once you get used to the larger type, however, most people find it far easier to read; and going back to a page where main type is 12 pixels will often then look quite small.

Units of Type Size: Pixels, Percentages, Ems

Pixels - Setting font size in pixels is the best way to ensure that the type appears at the size you intended (because percentages and ems are more likely to vary if a user has changed the default size of text in their browser).
- Pixels are relative to the resolution of the screen, so the same type size will look larger when a screen has a resolution of 800x600 than it would when it is 1280x800.
- You can also use pt for point sizes instead of px for pixels, but you should only do this when creating style sheets for printer- friendly versions of pages.

More Font Choice: @font-face
@font-face - allows you to use a font, even if it is not installed on the computer of the person browsing, by allowing you to specify a path to a copy of the font, which will be downloaded if it is not on the user's machine.
- Because this technique allows a version of the font to be downloaded to the user's computer, it is important that the license for the font permits it to be used in this way.
You add the font to your style sheet using the @font-face rule, as shown on the right.

font-family:
- This specifies the name of the font. This name can then be used as a value of the font-family property in the rest of the style sheet (as shown in the rule for the <h1> and <h2> elements).

src:
- This specifies the path to the font. In order for this technique to work in all browsers, you will probably need to specify paths to a few different versions of the font, as shown on the next page.

format:
- This specifies the format that the font is supplied in. (It's discussed in detail on the next page.)
Many typeface makers do not allow you to use their fonts in this way, but there are open source fonts you can use freely. You can find lists of them at:
www.fontsquirrel.com 
www.fontex.org
www.openfontlibrary.org
When looking at fonts on these sites, it is still important to check the font's license agreement because some fonts are only free for personal use (that is, not for use on commercial websites).
There are some sites that give you access to use commercial fonts, because they negotiated permission to let their customers use these fonts for a fee:
www.typekit.com 
www.kernest.com
www.fontspring.com
Google also provides open source fonts. Rather than adding the @font-face rule to your own style sheet, you link to a CSS file and font files on their servers: www.google.com/webfonts

Understanding Font Formats:
Different browsers support different formats for fonts
(in the same way that they support different audio and video formats), so you will need to supply the font in several variations to reach all browsers.
If you do not have all of these formats for your font, you can upload the font to a website called FontSquirrel where they will convert it for you:
www.fontsquirrel.com/fontface/generator
Font Squirrel also provides you with the CSS code for the @font-face rule. This is very helpful because, when you
are dealing with multiple font formats, the src and format properties of the @font-face rule can get rather complicated.

font-weight: normal, bold
- The font-weight property allows you to create bold text. There are two values that this property commonly takes:

normal:
This causes text to appear at a normal weight.

bold:
- This causes text to appear bold.
In this example, you can see that the element whose class attribute has a value of credits has been bolded.
You might wonder why there is a normal weight. This is because if, for example, you created a rule for the <body> element indicating that all text inside the body should appear bold, you might need an option that allows the text in certain instances to appear normal weight. So it is essentially used as an "off switch".

font-style: normal, italic, oblique
- If you want to create italic text, you can use the font-style property. There are three values this property can take:

normal - This causes text to appear in a normal style (as opposed to italic or oblique).
italic - This causes text to appear italic.
oblique - This causes text to appear oblique.
In this example, you can see that the credits have been italicized.

* Italic fonts were traditionally stylized versions of the font based on calligraphy, whereas an oblique version would take the normal version and put it on an angle.
* It is not unusual for the browser to fail to find an italic version of a typeface, in which case it will use an algorithm to place the normal version of the type on a slant, which means that a lot of italic text online is actually oblique.

text-transform: uppercase and lowercase
- The text-transform property is used to change the case of text giving it one of the following values:
uppercase - This causes the text to appear uppercase.
lowercase - This causes the text to appear lowercase.
capitalize - This causes the first letter of each word to appear capitalized.
* In this example, the <h1> element is uppercase, the <h2> element is lowercase, and the credits are capitalized. In the HTML, the word by in the credits had a lowercase b.
If you do utilize the uppercase option, it is worth looking at the letter-spacing property to increase the gap between each letter as shown on page 284. This will help improve readability.

text-decoration: none, underline, overline, linethrough, blink
- The text-decoration property allows you to specify the following values:
none - This removes any decoration already applied to the text.
underline - This adds a line underneath the text.
overline - This adds a line over the top of the text.
line-through - This adds a line through words.
blink - This animates the text to make it flash on and off (however this is generally frowned upon, as it is considered rather annoying).
- In this example, the credits have been underlined. Also, the name of the breed (which is a link) is not underlined, which it would be by default because it is a link.

* This property is commonly used by designers to remove
the underlines that browsers place under links. Pages 290-291 show how to add or remove an underline when a user hovers over a link.

Leading/line-height:
- Leading (pronounced ledding) is a term typographers use for the vertical space between lines of text. In a typeface, the part of a letter that drops beneath the baseline is called a descender, while the highest point of a letter is called the ascender. 
- Leading is measured from the bottom of the descender on one line to the top of the ascender on the next.

- In CSS, the line-height property sets the height of
an entire line of text, so the difference between the font- size and the line-height is equivalent to the leading (as shown in the diagram above).
- Increasing the line-height makes the vertical gap between lines of text larger.
- Increasing the default amount of leading can make text easier to read. The vertical space between lines should be larger than the space between each word as this helps the eye move along the line instead of down them. A good starter setting is around 1.4 to 1.5em. 
- Because users can adjust the default size of text in their
browser, the value of the line- height property is best given in ems, not pixels, so that the gap between lines is relative to the size of text the user has selected.

ex: p {
    	line-height: 1.4em;
	  }

Letter & Word Spacing: letter-spacing, word-spacing
Kerning - is the term typographers use for the space between each letter. You can control the space between each letter with the letter-spacing property.

It is particularly helpful to increase the kerning when your heading or sentence is all in uppercase. If your text is in sentence (or normal) case, increasing or decreasing the kerning can make it harder to read.
You can also control the gap between words using the word-spacing property.
When you specify a value for these properties, it should
be given in ems, and it will be added on top of the default value specified by the font.
The default gap between words is set by the typeface (often around 0.25em), and
it is unlikely that you would need to change this property regularly. If the typeface is bold or you have increased the space between letters, then a larger gap between words can increase readability.

Alignment: text-align
- The text-align property allows you to control the alignment of text. The property can take one of four values: left, right, center, justify
left - This indicates that the text should be left-aligned.
right - This indicates that the text should be right-aligned.
center - This allows you to center text.
justify - This indicates that every line in a paragraph, except the last line, should be set to take up the full width of the containing box. (helps with understanding flexbox and css grid later on)

* When you have several paragraphs of text, it is considered easiest to read if the text is left-aligned.
* Justified text looks at the words on each individual line and creates an equal gap between those words. It can look odd
if you end up with large gaps between some words and smaller gaps between others. This often happens when your lines are not very wide or when your text contains long words.

 Vertical Alignment: vertical-align
 - The vertical-align property is a common source of confusion. It is not intended to allow you to vertically align text in the middle of block level elements such as <p> and <div>, although it does have this effect when used with table cells (the <td> and <th> elements).
IMPORTANT:
It is more commonly used with inline elements such as <img>, <em>, or <strong> elements. When used with these elements, it performs a task very similar to the HTML align attribute used on the <img> element, which you met on pages 103-106. The values it can take are:
baseline
sub
super
top
text-top
middle
bottom
text-bottom
It can also take a *length (usually specified in pixels or ems) or a *percentage of the line height.

Indenting Text: text-indent
- The text-indent property allows you to indent the first line of text within an element. The amount you want the line indented by can be specified in a number of ways but is usually given in pixels or ems.
- It can take a negative value, which means it can be used
to push text off the browser window. You can see this technique used in this example, where the <h1> element uses a background image to represent the heading. The text has been moved far to the left, off the screen. (Background images are covered on pages 413-418.)
h1 {
  background-image: url("images/logo.gif");
  background-repeat: no-repeat;
  text-indent: -9999px;}
.credits {
  text-indent: 20px;} *
  
  We still want the heading text to be on the page (for search engines and those who cannot see the image), but we cannot have it displayed on top of the logo or it will be unreadable. By pushing it 9,999 pixels to the left, it is way out of sight but still in the HTML code.
* The second rule in this example indents the credits 20 pixels to the right.